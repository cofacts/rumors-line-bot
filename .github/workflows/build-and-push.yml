name: Build and push to docker

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the dev branch
  push:
    tags:
      - release/*
    branches:
      - master

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        locales:
          - locale: en_US
            postfix: -en
          - locale: zh_TW
            postfix: -tw
          - locale: ja
            postfix: -ja
    env:
      RELEASE_TAG: ${{ startsWith(github.ref, 'refs/tags/release') && 'latest' || 'dev' }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Echo RELEASE_TAG
        run: 'echo $RELEASE_TAG'

      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Generate staging .env file
        run: 'curl $ENV_URL -o .env'
        env:
          ENV_URL: ${{ secrets.STAGING_ENV_URL }}
        if: ${{ env.RELEASE_TAG == 'dev' }}

      - name: Generate production .env file
        run: 'curl $ENV_URL -o .env'
        env:
          ENV_URL: ${{ secrets.PRODUCTION_ENV_URL }}${{ matrix.locales.postfix }}
        if: ${{ env.RELEASE_TAG == 'latest' }}

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: cofacts/rumors-line-bot:${{ env.RELEASE_TAG }}${{ matrix.locales.postfix }}
          build-args: |
            "LOCALE=${{ matrix.locales.locale }}"
          # Cache for individual languages
          # Ref: https://docs.docker.com/build/cache/backends/gha/#scope
          # Cache busting idea from: https://stackoverflow.com/a/64819132 to handle i18n update issue
          cache-from: type=gha,scope=${{env.GITHUB_REF_NAME}}${{matrix.locales.postfix}}${{env.DOCKER_BUILD_CACHE_BUST}}
          cache-to: type=gha,mode=max,scope=${{env.GITHUB_REF_NAME}}${{matrix.locales.postfix}}${{env.DOCKER_BUILD_CACHE_BUST}}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  deploy-staging:
    permissions: # Required by google-github-actions/auth
      contents: 'read'
      id-token: 'write'
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: https://lin.ee/1QUzEX4nI
    if: ${{ !startsWith(github.ref, 'refs/tags/release') }}
    steps:
    - uses: 'google-github-actions/auth@v1'
      with:
        workload_identity_provider: ${{ secrets.GC_WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.GC_SERVICE_ACCOUNT }}
    - uses: 'google-github-actions/deploy-cloudrun@v1'
      with:
        service: dev-line-bot
        image: cofacts/rumors-line-bot:dev-tw
        region: asia-northeast1

  deploy-production:
    permissions: # Required by google-github-actions/auth
      contents: 'read'
      id-token: 'write'
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        locales:
          - postfix: -en
            url: https://lin.ee/ESe1YU6
          - postfix: -tw
            url: https://lin.ee/3KCZgIq
          - postfix: -ja
            url: https://lin.ee/N4m6fYI
    environment:
      name: production${{matrix.locales.postfix}}
      url: ${{matrix.locales.url}}
    if: ${{ startsWith(github.ref, 'refs/tags/release') }}
    steps:
    - uses: 'google-github-actions/auth@v1'
      with:
        workload_identity_provider: ${{ secrets.GC_WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.GC_SERVICE_ACCOUNT }}
    - uses: 'google-github-actions/deploy-cloudrun@v1'
      with:
        service: line-bot${{matrix.locales.postfix}}
        image: cofacts/rumors-line-bot:latest${{ matrix.locales.postfix }}
        region: asia-northeast1
